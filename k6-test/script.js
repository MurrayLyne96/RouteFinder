/*
 * RouteFinderAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 6.5.0-SNAPSHOT
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://routefinder-service-1.n1ujnf2e69gi8.eu-west-1.cs.amazonlightsail.com";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
let authToken = '';
let refreshToken = '';
// Global variables should be initialized.

export default function() {
    group("/api/Auth", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Auth`;
            let body = {"email": "testuser6@test.com", "password": "Password01"};

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.post(url, JSON.stringify(body), params);

            authToken = request.json().token;
            refreshToken = request.json().refreshToken;

            check(request, {
                "Success": (r) => r.status === 200
            });
        }
    });

    group("/api/Auth/refresh", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Auth/refresh`;
            let body = {"token": authToken, "refreshToken": refreshToken};

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
        }
    });

    group("/api/Routes/{routeId}", () => {
        let routeId = '585bf282-72f7-431a-8ef1-76227d7b6a4c';

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes/${routeId}`;

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.get(url, params);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Routes/${routeId}`;

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.del(url, params);

            check(request, {
                "Success": (r) => r.status === 204
            });
        }
    });

    group("/api/Routes/{routeId}/plotpoints/{plotPointId}", () => {
        let routeId = '585bf282-72f7-431a-8ef1-76227d7b6a4c';
        let plotPointId = '1';

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes/${routeId}/plotpoints/${plotPointId}`;
            // TODO: edit the parameters of the request body.
            let body = {"xCoordinate": "20", "yCoordinate": "20", "description": "test", "plotOrder": "0"};
            
            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 204
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Routes/${routeId}/plotpoints/${plotPointId}`;

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.del(url, params);

            check(request, {
                "Success": (r) => r.status === 204
            });
        }
    });

    group("/api/Users/{userId}", () => {
        let userId = 'e95c0767-bac6-4597-a3c5-590dc1694493';

        // Request No. 1
        {
            let url = BASE_URL + `/api/Users/${userId}`;

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.get(url, params);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Users/${userId}`;
            let request = http.del(url);

            check(request, {
                "Success": (r) => r.status === 204
            });
        }
    });

    group("/api/Users", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Users`;

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.get(url, params);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Users`;
            // TODO: edit the parameters of the request body.
            let body = {"firstName": "test", "lastName": "test", "dateOfBirth": "15/03/1996", "email": "testaccount@test.com", "password": "Password01"};


            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
        }
    });

    group("/api/Routes/{routeId}/plotpoints", () => {
        let routeId = '585bf282-72f7-431a-8ef1-76227d7b6a4c'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes/${routeId}/plotpoints`;
            // TODO: edit the parameters of the request body.
            let body = {"xCoordinate": "20", "yCoordinate": "20", "description": "test", "plotOrder": "3"};

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
        }
    });

    group("/api/Routes", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let userId = 'e95c0767-bac6-4597-a3c5-590dc1694493';
            let url = BASE_URL + `/api/Routes`;
            // TODO: edit the parameters of the request body.
            let body = {"name": "test route load testing", "typeId": "1", "userId": userId};
            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
        }
    });

    group("/api/Users/{userId}/routes", () => {
        let userId = 'e95c0767-bac6-4597-a3c5-590dc1694493'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/api/Users/${userId}/routes`;

            let params = {
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
            };

            let request = http.get(url, params);

            check(request, {
                "Success": (r) => r.status === 200
            });
        }
    });

}
