/*
 * RouteFinderAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 6.5.0-SNAPSHOT
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "/";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/api/Auth/refresh", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Auth/refresh`;
            // TODO: edit the parameters of the request body.
            let body = {"token": "string", "refreshToken": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
        }
    });

    group("/api/Auth", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Auth`;
            // TODO: edit the parameters of the request body.
            let body = {"email": "string", "password": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 200
            });
        }
    });

    group("/api/Routes/{routeId}", () => {
        let routeId = 'TODO_EDIT_THE_ROUTEID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes/${routeId}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Routes/${routeId}`;
            let request = http.del(url);

            check(request, {
                "Success": (r) => r.status === 204
            });
        }
    });

    group("/api/Routes/{routeId}/plotpoints/{plotPointId}", () => {
        let routeId = 'TODO_EDIT_THE_ROUTEID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let plotPointId = 'TODO_EDIT_THE_PLOTPOINTID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes/${routeId}/plotpoints/${plotPointId}`;
            // TODO: edit the parameters of the request body.
            let body = {"xCoordinate": "double", "yCoordinate": "double", "description": "string", "plotOrder": "integer"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.put(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 204
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Routes/${routeId}/plotpoints/${plotPointId}`;
            let request = http.del(url);

            check(request, {
                "Success": (r) => r.status === 204
            });
        }
    });

    group("/api/Users/{userId}", () => {
        let userId = 'TODO_EDIT_THE_USERID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/api/Users/${userId}`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Users/${userId}`;
            let request = http.del(url);

            check(request, {
                "Success": (r) => r.status === 204
            });
        }
    });

    group("/api/Users", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Users`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Users`;
            // TODO: edit the parameters of the request body.
            let body = {"firstName": "string", "lastName": "string", "dateOfBirth": "date", "email": "string", "password": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
        }
    });

    group("/api/Routes/{routeId}/plotpoints", () => {
        let routeId = 'TODO_EDIT_THE_ROUTEID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes/${routeId}/plotpoints`;
            // TODO: edit the parameters of the request body.
            let body = {"xCoordinate": "double", "yCoordinate": "double", "description": "string", "plotOrder": "integer"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
        }
    });

    group("/api/Routes", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/api/Routes`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/api/Routes`;
            // TODO: edit the parameters of the request body.
            let body = {"name": "string", "typeId": "integer", "userId": "uuid", "plotPoints": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Success": (r) => r.status === 201
            });
        }
    });

    group("/api/Users/{userId}/routes", () => {
        let userId = 'TODO_EDIT_THE_USERID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/api/Users/${userId}/routes`;
            let request = http.get(url);

            check(request, {
                "Success": (r) => r.status === 200
            });
        }
    });

}
